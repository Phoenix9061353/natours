{"mappings":"AAEO,MAAMA,EAAcC,IACzB,MAAMC,EAAMC,EAAED,IAAI,MAAO,CAAEE,aAAa,IAExCD,EAAEE,UAAU,qDAAsD,CAChEC,YACE,4FACDC,MAAML,GAET,MAAMM,EAAS,GACfP,EAAUQ,SAASC,IACjBF,EAAOG,KAAK,CAACD,EAAIE,YAAY,GAAIF,EAAIE,YAAY,KAEjDT,EAAEU,OAAO,CAACH,EAAIE,YAAY,GAAIF,EAAIE,YAAY,KAC3CL,MAAML,GACNY,UAAU,UAAUJ,EAAIK,QAAQL,EAAIM,kBAAmB,CACtDC,WAAW,IAEZC,WAAW,IAGhB,MAAMC,EAAShB,EAAEiB,aAAaZ,GAAQa,IAAI,IAC1CnB,EAAIoB,UAAUH,GAEdjB,EAAIqB,gBAAgBC,SAAS,ECvBlBC,EAAY,KACvB,MAAMC,EAAKC,SAASC,cAAc,UAC9BF,GAAIA,EAAGG,cAAcC,YAAYJ,EAAG,EAG7BK,EAAY,CAACC,EAAMC,KAC9BR,IACA,MAAMS,EAAS,4BAA4BF,MAASC,UACpDN,SAASC,cAAc,QAAQO,mBAAmB,aAAcD,GAChEE,OAAOC,WAAWZ,EAAW,IAAK,ECNvBa,EAAQC,MAAOC,EAAOC,KACjC,MAAMC,QAAYC,MAAM,sBAAuB,CAC7CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,C,MACnBT,E,SACAC,MAGES,QAAYR,EAAIS,OAEH,YAAfD,EAAIE,QACNrB,EAAU,UAAW,2BACrBK,OAAOC,YAAW,KAChBgB,SAASC,OAAO,IAAI,GACnB,OAEHvB,EAAU,QAASmB,EAAIK,QAAQ,ECrBtBC,EAAiBjB,MAAOkB,EAAMzB,KACzC,MAAM0B,EAAK,IAAKD,GACVE,EAAU,CAAEf,OAAQ,SACpBgB,EAAe,aAAT5B,EAAsB,mBAAqB,WACvD,GAAa,SAATA,EAAiB,CAEnB,MAAM6B,EAAO,IAAIC,SACjBD,EAAKE,OAAO,OAAQL,EAAGM,MACvBH,EAAKE,OAAO,QAASL,EAAGlB,OACxBqB,EAAKE,OAAO,QAASL,EAAGO,OACxBN,EAAQZ,KAAOc,C,MAEfF,EAAQd,QAAU,CAAE,eAAgB,oBACpCc,EAAQZ,KAAOC,KAAKC,UAAUS,GAEhC,MAAMhB,QAAYC,MAAM,iBAAiBiB,IAAOD,GAE1CT,QAAYR,EAAIS,OAEH,YAAfD,EAAIE,OACNrB,EAAU,UAAW,GAAGC,EAAKkC,uCAE7BnC,EAAU,QAASmB,EAAIK,QAAQ,ECvBtBY,EAAS5B,MAAOyB,EAAMxB,EAAOC,EAAU2B,KAClD,MAAM1B,QAAYC,MAAM,uBAAwB,CAC9CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,C,KACnBe,E,MACAxB,E,SACAC,E,gBACA2B,MAGElB,QAAYR,EAAIS,OACH,YAAfD,EAAIE,QACNrB,EAAU,UAAW,yBACrBK,OAAOC,YAAW,KAChBgB,SAASC,OAAO,IAAI,GACnB,OAEHvB,EAAU,QAASmB,EAAIK,QAAQ,ECpBtBc,EAAW9B,MAAO+B,IACdC,OACb,+GAGF,IACE,MAAMC,QAAgB7B,MAAM,oCAAoC2B,IAAU,CACxE1B,OAAQ,QAEJ6B,QAAmBD,EAAQrB,OAEjCf,OAAOiB,SAASqB,QAAQD,EAAWD,QAAQZ,I,CAC3C,MAAOe,GACP5C,EAAU,QAAS4C,E,GCNjBC,EAAajD,SAASkD,eAAe,OACrCC,EAAYnD,SAASC,cAAc,gBACnCmD,EAAYpD,SAASC,cAAc,oBACnCoD,EAAiBrD,SAASC,cAAc,mBACxCqD,EAAqBtD,SAASC,cAAc,uBAC5CsD,EAAavD,SAASC,cAAc,iBACpCuD,EAAUxD,SAASkD,eAAe,aAGxC,GAAID,EAAY,CAEd5E,EADkBgD,KAAKoC,MAAMR,EAAWS,QAAQpF,W,CAK9CiF,GACFA,EAAWI,iBAAiB,UAAU/C,MAAOgD,IAC3CA,EAAEC,iBACF7D,SAASC,cAAc,iBAAiB6D,YAAc,oBACtD,MAAMzB,EAAOrC,SAASkD,eAAe,QAAQa,MACvClD,EAAQb,SAASkD,eAAe,SAASa,MACzCjD,EAAWd,SAASkD,eAAe,YAAYa,MAC/CtB,EAAkBzC,SAASkD,eAAe,oBAAoBa,YAC9DvB,EAAOH,EAAMxB,EAAOC,EAAU2B,GACpCzC,SAASC,cAAc,iBAAiB6D,YAAc,SAAS,IAK/DX,GACFA,EAAUQ,iBAAiB,UAAWC,IACpCA,EAAEC,iBACF,MAAMhD,EAAQb,SAASkD,eAAe,SAASa,MACzCjD,EAAWd,SAASkD,eAAe,YAAYa,MACrDpD,EAAME,EAAOC,EAAS,IAKtBsC,GAAWA,EAAUO,iBAAiB,SJrBpB/C,UACpB,MAAMG,QAAYC,MAAM,uBAAwB,CAC9CC,OAAQ,QAGS,mBADDF,EAAIS,QACdC,OAENhB,OAAOC,YAAW,KAChBgB,SAASC,OAAO,IAAI,GACnB,KACEvB,EAAU,QAAS,gCAAgC,IIcxDiD,GACFA,EAAeM,iBAAiB,UAAU/C,MAAOgD,IAC/CA,EAAEC,iBACF7D,SAASC,cAAc,uBAAuB6D,YAAc,cAC5D,MAAMzB,EAAOrC,SAASkD,eAAe,QAAQa,MACvClD,EAAQb,SAASkD,eAAe,SAASa,MACzCzB,EAAQtC,SAASkD,eAAe,SAASc,MAAM,SAE/CnC,EAAe,C,KAAEQ,E,MAAMxB,E,MAAOyB,GAAS,QAC7CtC,SAASC,cAAc,uBAAuB6D,YAAc,gBAC5DrD,OAAOC,WAAWgB,SAASuC,QAAO,GAAO,IAAK,IAK9CX,GACFA,EAAmBK,iBAAiB,UAAU/C,MAAOgD,IAKnDA,EAAEC,iBACF7D,SAASC,cAAc,sBAAsB6D,YAAc,cAC3D,MAAMI,EAAclE,SAASkD,eAAe,oBAAoBa,MAC1DI,EAAcnE,SAASkD,eAAe,YAAYa,MAClDK,EACJpE,SAASkD,eAAe,oBAAoBa,YACxClC,EACJ,C,YAAEqC,E,YAAaC,E,mBAAaC,GAC5B,YAEFpE,SAASC,cAAc,sBAAsB6D,YAAc,gBAC3D9D,SAASkD,eAAe,oBAAoBa,MAAQ,GACpD/D,SAASkD,eAAe,YAAYa,MAAQ,GAC5C/D,SAASkD,eAAe,oBAAoBa,MAAQ,EAAE,IAItDP,GACFA,EAAQG,iBAAiB,SAAUC,IACjCA,EAAES,OAAOP,YAAc,gBACvB,MAAMnB,OAAEA,GAAWiB,EAAES,OAAOX,QAC5BhB,EAASC,EAAO","sources":["public/js/leaflet.js","public/js/alert.js","public/js/login.js","public/js/updateSettings.js","public/js/signUp.js","public/js/stripe.js","public/js/index.js"],"sourcesContent":["/* eslint-disable */\n\nexport const displayMap = (locations) => {\n  const map = L.map('map', { zoomControl: false });\n\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  }).addTo(map);\n\n  const points = [];\n  locations.forEach((loc) => {\n    points.push([loc.coordinates[1], loc.coordinates[0]]);\n    //Set marker and pop-up\n    L.marker([loc.coordinates[1], loc.coordinates[0]])\n      .addTo(map)\n      .bindPopup(`<p>Day ${loc.day}: ${loc.description}</p>`, {\n        autoClose: false,\n      })\n      .openPopup();\n  });\n  //Set bounds\n  const bounds = L.latLngBounds(points).pad(0.5);\n  map.fitBounds(bounds);\n  //阻止滾輪縮放地圖\n  map.scrollWheelZoom.disable();\n};\n","/* eslint-disable */\n\nexport const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n//type is 'success' or 'error'\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 3000);\n};\n","/* eslint-disable */\n// import axios from 'axios';\n// const axios = require('axios');\n//use fetch instead of axios\nimport { showAlert } from './alert';\nexport const login = async (email, password) => {\n  const req = await fetch('/api/v1/users/login', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  });\n  const res = await req.json();\n\n  if (res.status === 'success') {\n    showAlert('success', 'Logged in successfully!');\n    window.setTimeout(() => {\n      location.assign('/');\n    }, 1500);\n  } else {\n    showAlert('error', res.message);\n  }\n};\n\nexport const logout = async () => {\n  const req = await fetch('/api/v1/users/logout', {\n    method: 'GET',\n  });\n  const res = await req.json();\n  if (res.status === 'success') {\n    // location.reload(true);\n    window.setTimeout(() => {\n      location.assign('/');\n    }, 500);\n  } else showAlert('error', 'Error logging out! Try again!');\n};\n","/* eslint-disable */\nimport { showAlert } from './alert';\n\n//type is either password or data\nexport const updateSettings = async (data, type) => {\n  const dt = { ...data };\n  const options = { method: 'PATCH' };\n  const url = type === 'password' ? 'updateMyPassword' : 'updateMe';\n  if (type === 'data') {\n    //用formdata處理有 multipart data的情況\n    const form = new FormData();\n    form.append('name', dt.name);\n    form.append('email', dt.email);\n    form.append('photo', dt.photo);\n    options.body = form;\n  } else {\n    options.headers = { 'Content-Type': 'application/json' };\n    options.body = JSON.stringify(dt);\n  }\n  const req = await fetch(`/api/v1/users/${url}`, options);\n\n  const res = await req.json();\n\n  if (res.status === 'success') {\n    showAlert('success', `${type.toUpperCase()} updated successfully!`);\n  } else {\n    showAlert('error', res.message);\n  }\n};\n","/* eslint-disable */\n\nimport { showAlert } from './alert';\nexport const signup = async (name, email, password, passwordConfirm) => {\n  const req = await fetch('/api/v1/users/signup', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password,\n      passwordConfirm,\n    }),\n  });\n  const res = await req.json();\n  if (res.status === 'success') {\n    showAlert('success', 'Sign up successfully!');\n    window.setTimeout(() => {\n      location.assign('/');\n    }, 1500);\n  } else {\n    showAlert('error', res.message);\n  }\n};\n","/* eslint-disable */\n\nimport { showAlert } from './alert';\n\nexport const bookTour = async (tourId) => {\n  const stripe = Stripe(\n    'pk_test_51Loo21IIKOWWxX27FP7yCHnxij7qIjGAmHxtMJVCq5ZTucKXO0ZwP4RLsGypzdBYx4a8DIZYGfr84EeXTOI1UDxQ0003l7V6b5'\n  );\n  //1) Get session from API\n  try {\n    const session = await fetch(`/api/v1/booking/checkout-session/${tourId}`, {\n      method: 'GET',\n    });\n    const resSession = await session.json();\n    //2) 送出checkout form + 信用卡付帳(導向生成的付款頁面)\n    window.location.replace(resSession.session.url);\n  } catch (err) {\n    showAlert('error', err);\n  }\n};\n","/* eslint-disable */\n\nimport 'regenerator-runtime/runtime.js';\n// require('regenerator-runtime/runtime');\nimport { displayMap } from './leaflet';\nimport { login, logout } from './login';\nimport { updateSettings } from './updateSettings';\nimport { signup } from './signUp';\nimport { bookTour } from './stripe';\n\n//DOM Element\nconst leafletMap = document.getElementById('map');\nconst logInForm = document.querySelector('.form--login');\nconst logOutBtn = document.querySelector('.nav__el--logout');\nconst updateDataForm = document.querySelector('.form-user-data');\nconst updatePasswordForm = document.querySelector('.form-user-settings');\nconst signUpForm = document.querySelector('.form--signUp');\nconst bookBtn = document.getElementById('book-tour');\n///////////////////////////////////////////////////////////////////\n//Map\nif (leafletMap) {\n  const locations = JSON.parse(leafletMap.dataset.locations);\n  displayMap(locations);\n}\n\n//Sign up\nif (signUpForm) {\n  signUpForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    document.querySelector('.btn--sign-up').textContent = 'Please waiting...';\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    await signup(name, email, password, passwordConfirm);\n    document.querySelector('.btn--sign-up').textContent = 'Sign Up';\n  });\n}\n\n//Log in\nif (logInForm) {\n  logInForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n}\n\n//Log out\nif (logOutBtn) logOutBtn.addEventListener('click', logout);\n\n//讓登入的使用者能改自己的資料（名字、email、照片）\nif (updateDataForm) {\n  updateDataForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    document.querySelector('.btn--save-settings').textContent = 'UPDATING...';\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const photo = document.getElementById('photo').files[0];\n\n    await updateSettings({ name, email, photo }, 'data');\n    document.querySelector('.btn--save-settings').textContent = 'SAVE SETTINGS';\n    window.setTimeout(location.reload(true), 6000);\n  });\n}\n\n//讓登入的使用者能改自己的資料（密碼）\nif (updatePasswordForm) {\n  updatePasswordForm.addEventListener('submit', async (e) => {\n    // // guard to check if different form submitted\n    // if (!e.target.classList.contains('form-user-settings')) {\n    //   return;\n    // }\n    e.preventDefault();\n    document.querySelector('.btn-save-password').textContent = 'Updating...';\n    const oldPassword = document.getElementById('password-current').value;\n    const newPassword = document.getElementById('password').value;\n    const newPasswordConfirm =\n      document.getElementById('password-confirm').value;\n    await updateSettings(\n      { oldPassword, newPassword, newPasswordConfirm },\n      'password'\n    );\n    document.querySelector('.btn-save-password').textContent = 'Save password';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n}\n\nif (bookBtn)\n  bookBtn.addEventListener('click', (e) => {\n    e.target.textContent = 'Processing...';\n    const { tourId } = e.target.dataset;\n    bookTour(tourId);\n  });\n"],"names":["$e9b135a54c6f1735$export$4c5dd147b21b9176","locations","map","L","zoomControl","tileLayer","attribution","addTo","points","forEach","loc","push","coordinates","marker","bindPopup","day","description","autoClose","openPopup","bounds","latLngBounds","pad","fitBounds","scrollWheelZoom","disable","$db8ea93002615955$export$516836c6a9dfc573","el","document","querySelector","parentElement","removeChild","$db8ea93002615955$export$de026b00723010c1","type","msg","markup","insertAdjacentHTML","window","setTimeout","$d920778adf497637$export$596d806903d1f59e","async","email","password","req","fetch","method","headers","Accept","body","JSON","stringify","res","json","status","location","assign","message","$550d08d1af104be0$export$f558026a994b6051","data","dt","options","url","form","FormData","append","name","photo","toUpperCase","$8c8e839519239f0d$export$7200a869094fec36","passwordConfirm","$c59c49627eca46db$export$8d5bdbf26681c0c2","tourId","Stripe","session","resSession","replace","err","$b4a6ca9cb50e9308$var$leafletMap","getElementById","$b4a6ca9cb50e9308$var$logInForm","$b4a6ca9cb50e9308$var$logOutBtn","$b4a6ca9cb50e9308$var$updateDataForm","$b4a6ca9cb50e9308$var$updatePasswordForm","$b4a6ca9cb50e9308$var$signUpForm","$b4a6ca9cb50e9308$var$bookBtn","parse","dataset","addEventListener","e","preventDefault","textContent","value","files","reload","oldPassword","newPassword","newPasswordConfirm","target"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}